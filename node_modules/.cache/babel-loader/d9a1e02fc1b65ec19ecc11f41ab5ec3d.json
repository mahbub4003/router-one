{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAHBUB\\\\Desktop\\\\react\\\\my-react\\\\src\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Auth from \"./Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst privateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  /*#__PURE__*/\n  _jsxDEV(Route, { ...rest,\n    render: props => Auth.isLogin ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\nexport default privateRoute;","map":{"version":3,"sources":["C:/Users/MAHBUB/Desktop/react/my-react/src/PrivateRoute.js"],"names":["React","Route","Redirect","Auth","privateRoute","component","Component","rest","props","isLogin","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D;AAAA,UAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IACNL,IAAI,CAACM,OAAL,gBACE,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFE,QAAAA,QAAQ,EAAE,QADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA;AAeD,CAhBD;;AAkBA,eAAeT,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Auth from \"./Auth\";\r\n\r\nconst privateRoute = ({ component: Component, ...rest }) => {\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      Auth.isLogin ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />;\r\n};\r\n\r\nexport default privateRoute;\r\n"]},"metadata":{},"sourceType":"module"}